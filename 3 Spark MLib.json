{"paragraphs":[{"title":"Performing Machine Learning on the Singapore Airbnb Data","text":"%spark\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.regression.LinearRegression\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, TrainValidationSplit}\nimport org.apache.log4j._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.mllib.linalg.Vectors","user":"anonymous","dateUpdated":"2020-01-11T19:17:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.regression.LinearRegression\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, TrainValidationSplit}\nimport org.apache.log4j._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.mllib.linalg.Vectors\nimport org.apache.spark.ml.feature.{IndexToString, StringIndexer, VectorIndexer}\n"}]},"apps":[],"jobName":"paragraph_1578500087547_473157020","id":"20180808-224453_1028333342","dateCreated":"2020-01-08T16:14:47+0000","dateStarted":"2020-01-11T19:09:49+0000","dateFinished":"2020-01-11T19:09:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4126"},{"text":"%spark\n\nval data = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").format(\"csv\").load(\"/home/senani_2019199/cw/listings.csv\")","user":"anonymous","dateUpdated":"2020-01-11T18:14:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data: org.apache.spark.sql.DataFrame = [id: string, name: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1578502327823_1645998121","id":"20200108-165207_770898362","dateCreated":"2020-01-08T16:52:07+0000","dateStarted":"2020-01-11T18:14:20+0000","dateFinished":"2020-01-11T18:14:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4127"},{"text":"%spark\n\nval castedVals = data.withColumn(\"longitude\",col(\"longitude\").cast(DoubleType))","user":"anonymous","dateUpdated":"2020-01-11T18:14:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"castedVals: org.apache.spark.sql.DataFrame = [id: string, name: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1578766295379_-1941811671","id":"20200111-181135_1247184607","dateCreated":"2020-01-11T18:11:35+0000","dateStarted":"2020-01-11T18:14:32+0000","dateFinished":"2020-01-11T18:14:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4128"},{"text":"%spark\n\nval assemble = new VectorAssembler().setInputCols(Array(\"latitude\",\"longitude\")).setOutputCol(\"features\").setLabelCol(\"label\")\n\nval data2 = assemble.transform(castedVals).select($\"neighbourhood_group\",$\"features\")\n\ndata2.show()\n\ndata2.printSchema()","user":"anonymous","dateUpdated":"2020-01-11T19:22:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+-------------------+\n|neighbourhood_group|           features|\n+-------------------+-------------------+\n|       North Region| [1.44255,103.7958]|\n|     Central Region|[1.33235,103.78521]|\n|       North Region|[1.44246,103.79667]|\n|        East Region|[1.34541,103.95712]|\n|        East Region|[1.34567,103.95963]|\n|        East Region|[1.34702,103.96103]|\n|        East Region|[1.34348,103.96337]|\n|        East Region|[1.32304,103.91363]|\n|        East Region|[1.32458,103.91163]|\n|        East Region|[1.32461,103.91191]|\n|     Central Region|[1.28875,103.80814]|\n|     Central Region|[1.28837,103.81099]|\n|        East Region|[1.34561,103.95984]|\n|     Central Region|[1.31125,103.83816]|\n|     Central Region|[1.28976,103.80896]|\n|     Central Region|[1.28677,103.81244]|\n|     Central Region|[1.28537,103.81087]|\n|        East Region|[1.34943,103.95951]|\n|     Central Region| [1.3142,103.90232]|\n|     Central Region| [1.3115,103.83759]|\n+-------------------+-------------------+\nonly showing top 20 rows\n\nroot\n |-- neighbourhood_group: string (nullable = true)\n |-- features: vector (nullable = true)\n\nassemble: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_64f4722ea847\ndata2: org.apache.spark.sql.DataFrame = [neighbourhood_group: string, features: vector]\n"}]},"apps":[],"jobName":"paragraph_1578766984151_295601529","id":"20200111-182304_27524298","dateCreated":"2020-01-11T18:23:04+0000","dateStarted":"2020-01-11T19:03:51+0000","dateFinished":"2020-01-11T19:03:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4129"},{"text":"val Array(training, test) = data2.randomSplit(Array(0.9, 0.1), seed = 12345)","user":"anonymous","dateUpdated":"2020-01-11T18:31:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"training: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [neighbourhood_group: string, features: vector]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [neighbourhood_group: string, features: vector]\n"}]},"apps":[],"jobName":"paragraph_1578502808117_-1846216336","id":"20200108-170008_1237881644","dateCreated":"2020-01-08T17:00:08+0000","dateStarted":"2020-01-11T18:31:06+0000","dateFinished":"2020-01-11T18:31:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4130"},{"text":"val lr = new LinearRegression()\n    .setMaxIter(10)","user":"anonymous","dateUpdated":"2020-01-11T18:31:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"lr: org.apache.spark.ml.regression.LinearRegression = linReg_d212b9f5dd36\n"}]},"apps":[],"jobName":"paragraph_1578503991681_740698933","id":"20200108-171951_167229638","dateCreated":"2020-01-08T17:19:51+0000","dateStarted":"2020-01-11T18:31:23+0000","dateFinished":"2020-01-11T18:31:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4131"},{"text":"val paramGrid = new ParamGridBuilder()\n  .addGrid(lr.regParam, Array(0.1, 0.01))\n  .addGrid(lr.fitIntercept)\n  .addGrid(lr.elasticNetParam, Array(0.0, 0.5, 1.0))\n  .build()","user":"anonymous","dateUpdated":"2020-01-11T18:31:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"paramGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlinReg_d212b9f5dd36-elasticNetParam: 0.0,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regParam: 0.1\n}, {\n\tlinReg_d212b9f5dd36-elasticNetParam: 0.0,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regParam: 0.01\n}, {\n\tlinReg_d212b9f5dd36-elasticNetParam: 0.5,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regParam: 0.1\n}, {\n\tlinReg_d212b9f5dd36-elasticNetParam: 0.5,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regParam: 0.01\n}, {\n\tlinReg_d212b9f5dd36-elasticNetParam: 1.0,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regParam: 0.1\n}, {\n\tlinReg_d212b9f5dd36-elasticNetParam: 1.0,\n\tlinReg_d212b9f5dd36-fitIntercept: true,\n\tlinReg_d212b9f5dd36-regPara..."}]},"apps":[],"jobName":"paragraph_1578504086451_-507492891","id":"20200108-172126_321278960","dateCreated":"2020-01-08T17:21:26+0000","dateStarted":"2020-01-11T18:31:34+0000","dateFinished":"2020-01-11T18:31:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4132"},{"text":"val trainValidationSplit = new TrainValidationSplit()\n  .setEstimator(lr)\n  .setEvaluator(new RegressionEvaluator)\n  .setEstimatorParamMaps(paramGrid)\n  .setTrainRatio(0.8)\n  .setParallelism(2)","user":"anonymous","dateUpdated":"2020-01-11T18:31:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainValidationSplit: org.apache.spark.ml.tuning.TrainValidationSplit = tvs_c2b49ef8cd18\n"}]},"apps":[],"jobName":"paragraph_1578504147621_-178440933","id":"20200108-172227_1134887506","dateCreated":"2020-01-08T17:22:27+0000","dateStarted":"2020-01-11T18:31:48+0000","dateFinished":"2020-01-11T18:31:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4133"},{"text":"val model = trainValidationSplit.fit(training)","user":"anonymous","dateUpdated":"2020-01-11T19:00:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.IllegalArgumentException: Field \"label\" does not exist.\nAvailable fields: neighbourhood_group, features\n  at org.apache.spark.sql.types.StructType$$anonfun$apply$1.apply(StructType.scala:274)\n  at org.apache.spark.sql.types.StructType$$anonfun$apply$1.apply(StructType.scala:274)\n  at scala.collection.MapLike$class.getOrElse(MapLike.scala:128)\n  at scala.collection.AbstractMap.getOrElse(Map.scala:59)\n  at org.apache.spark.sql.types.StructType.apply(StructType.scala:273)\n  at org.apache.spark.ml.util.SchemaUtils$.checkNumericType(SchemaUtils.scala:74)\n  at org.apache.spark.ml.PredictorParams$class.validateAndTransformSchema(Predictor.scala:53)\n  at org.apache.spark.ml.regression.LinearRegression.org$apache$spark$ml$regression$LinearRegressionParams$$super$validateAndTransformSchema(LinearRegression.scala:177)\n  at org.apache.spark.ml.regression.LinearRegressionParams$class.validateAndTransformSchema(LinearRegression.scala:120)\n  at org.apache.spark.ml.regression.LinearRegression.validateAndTransformSchema(LinearRegression.scala:177)\n  at org.apache.spark.ml.Predictor.transformSchema(Predictor.scala:144)\n  at org.apache.spark.ml.tuning.ValidatorParams$$anonfun$transformSchemaImpl$2.apply(ValidatorParams.scala:75)\n  at org.apache.spark.ml.tuning.ValidatorParams$$anonfun$transformSchemaImpl$2.apply(ValidatorParams.scala:74)\n  at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n  at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\n  at org.apache.spark.ml.tuning.ValidatorParams$class.transformSchemaImpl(ValidatorParams.scala:74)\n  at org.apache.spark.ml.tuning.TrainValidationSplit.transformSchemaImpl(TrainValidationSplit.scala:68)\n  at org.apache.spark.ml.tuning.TrainValidationSplit.transformSchema(TrainValidationSplit.scala:182)\n  at org.apache.spark.ml.PipelineStage.transformSchema(Pipeline.scala:74)\n  at org.apache.spark.ml.tuning.TrainValidationSplit$$anonfun$fit$1.apply(TrainValidationSplit.scala:123)\n  at org.apache.spark.ml.tuning.TrainValidationSplit$$anonfun$fit$1.apply(TrainValidationSplit.scala:121)\n  at org.apache.spark.ml.util.Instrumentation$$anonfun$11.apply(Instrumentation.scala:185)\n  at scala.util.Try$.apply(Try.scala:192)\n  at org.apache.spark.ml.util.Instrumentation$.instrumented(Instrumentation.scala:185)\n  at org.apache.spark.ml.tuning.TrainValidationSplit.fit(TrainValidationSplit.scala:121)\n  ... 51 elided\n"}]},"apps":[],"jobName":"paragraph_1578504594571_-173107088","id":"20200108-172954_1643953596","dateCreated":"2020-01-08T17:29:54+0000","dateStarted":"2020-01-11T19:00:34+0000","dateFinished":"2020-01-11T19:00:35+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:4134"}],"name":"3 Spark MLib","id":"2EZYWCKUK","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"pig:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}